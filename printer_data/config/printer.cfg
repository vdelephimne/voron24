[include fluidd.cfg]
# This file contains common pin mappings for the Fysetc Spider board.
# To use this config, the firmware should be compiled for the STM32F446.
# When calling "menuconfig", enable "extra low-level configuration setup"
# and select the "12MHz crystal" as clock reference
# For flashing, write the compiled klipper.bin to memory location 0x08000000

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Fine tune E steps					[extruder] section
#[include mainsail.cfg]
[include fluidd.cfg]
#[include stealthburner_led_effects_barf.cfg]
[include sfs.cfg]
[include sensorless.cfg]
[force_move]
enable_force_move: True


[display_status]
[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 6000			        #Max 4000
max_z_velocity: 15			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

## Below is the config for SB CAN TH, copy from sb_can_th.cfg
## https://github.com/FYSETC/FYSETC_SB_CAN_TOOLHEAD/blob/main/sb_can_th.cfg
[mcu]
canbus_uuid: 227aa775c3fc

[mcu EBBCan]          #sb_can_th
# Follow the instruction here https://www.klipper3d.org/CANBUS.html to get CAN id
# canbus_uuid=6d5368c09b69 old tool head 
canbus_uuid=698eb020fd17
[temperature_sensor chamber_temp]
sensor_type: Generic 3950
sensor_pin: PC3
min_temp: 0
max_temp: 115
gcode_id: chamber_th
##  In E0-MOT Position

#[temperature_sensor EBB_NTC]
#sensor_type: Generic 3950
#sensor_pin: EBBCan:gpio26

[extruder]
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
microsteps: 16
rotation_distance: 22   #22.6789511   #Bondtech 5mm Drive Gears
gear_ratio: 50:10               #for Stealthburner/Clockwork2 BMG Gear Ratio
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
# sensor_type: EPCOS 100K B57560G104F  from btt doc 
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio27
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
# min_temp: 0
max_temp: 300
min_temp: -273.15
max_power: 1.0
min_extrude_temp: 50
pressure_advance: 0.02 #0.05
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 50.0

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.650
stealthchop_threshold: 999999


[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345


##################################################################
# toolhead FANS
###################################################################
[fan]
pin: EBBCan:gpio13

[heater_fan hotend_fan]
pin: EBBCan:gpio14
heater: extruder
heater_temp: 50.0

#[fan_generic 4W_FAN0]
#pin: EBBCan:gpio15
#tachometer_pin: EBBCan:gpio12
#tachometer_ppr: 1
####################################################################
# PrinterFans
####################################################################
[heater_fan controller_fan]
##	Controller fan - FAN2 Connector
pin: PB2
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
fan_speed: 0.5
[fan_generic basement_1]
pin: PA13
max_power:1.0
shutdown_speed:0.0
cycle_time:0.5

 
hardware_pwm:false
kick_start_time:0.10
off_below:0.1
[fan_generic basement_2]
pin: PA14
max_power:1.0
shutdown_speed:0.0
cycle_time:0.5
 
hardware_pwm:false
kick_start_time:0.10
off_below:0.1




# IO.0
# sb_can_th:PB6
# IO.1
# sb_can_th:PB11
# IO.2
# sb_can_th:PB7

#####################################################################
#       Probe
#####################################################################

[probe]
##      Inductive Probe - If you use this section , please comment the [bltouch] section
##      This probe is not used for Z height, only Quad Gantry Leveling
##      In Z+ position
##      If your probe is NO instead of NC, add change pin to ^sb_can_th:PB6
pin = !EBBCan:gpio22
## From BTT 2040 cfg

x_offset: 0
y_offset: 0 #25.0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.01  #0.006
samples_tolerance_retries: 3

##   TAP
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 10 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}



#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X-MOT (B Motor)
step_pin: PE11
dir_pin: PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: sb_can_th:PB11 #^PB14
#senorless homing
endstop_pin: tmc2209_stepper_x:virtual_endstop 
## --------
position_min: 0

position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 40   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PE7
# Senlorless homing
diag_pin: ^PB14
driver_SGTHRS: 87    #135 from other cfg  # 255 is most sensitive value, 0 is least sensitive
interpolate: True
run_current: 1.1
# hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: ^PB13
## Sensorless Homing
endstop_pin: tmc2209_stepper_y:virtual_endstop
## --------
position_min: 0

position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 40  #Max 100
homing_retract_dist: 0
homing_positive_dir: True
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
## Sensorless Homing
diag_pin: ^PB13
driver_SGTHRS: 84 #134 kapmans cfg  # 255 is most sensitive value, 0 is least sensitive
interpolate: false
run_current: 1.1
# hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## In Z-MOT Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PD14
dir_pin: PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
##  In Z- Position
endstop_pin: probe:z_virtual_endstop #^PA0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.2
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_max: 240

##	Uncomment below for 300mm build
#position_max: 290

##	Uncomment below for 350mm build
position_max: 340

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD10
uart_address: 0
interpolate: True
run_current: 1.0
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E1-MOT Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE6
dir_pin: !PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: True
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E2-MOT Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E3-MOT Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PD12
dir_pin: !PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PA15
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
##	SSR Pin - In BED OUT position
heater_pin: PB4
sensor_type: NTC 100K MGB18-104F39050L32
#sensor_pin: PC3 # Spider 1.x
sensor_pin: PB0 # Spider 2.x
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.8
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#	Fan Control
#####################################################################



#[heater_fan exhaust_fan]
##  Exhaust fan - In E2 OUT Positon
#pin: PB3
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
#fade_start: 0.6
#fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
## relative_reference_index: 12

#####################################################################
#	LED Control added code on 12/18/24 VD
#####################################################################

[output_pin caselight ]
##  Chamber Lighting - In 24v fan 5 Position pin PB7
pin: PB6    
pwm: true
shutdown_value: 0
value:0.5
cycle_time: 0.01

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:259.5,304

#comented out per Kaplin sensorless homing vid
#home_xy_position:175,175
#speed:200  #100
#z_hop:10
   
[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions



###	Gantry Corners for 350mm Build
###	Uncomment for 350mm build
gantry_corners:
	-60,-10
	410,420
###	Probe points
points:
	50,25
	50,275
	300,275
	300,25

##	Gantry Corners for TAP 350mm Build
##	Uncomment for TAP 350mm build
gantry_corners:
	-60,-10
	410,420
##	Probe points
points:
	50,50
	50,300
	300,300
	300,50

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 7
retry_tolerance: 0.0075   #0.0075
max_adjust: 10

#####################################################################
#	Mcu and Host Temperature
#####################################################################

[temperature_sensor main_mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 150

#[temperature_sensor can_mcu_temp]
#sensor_type: temperature_mcu
#sensor_mcu: sb_can_th
#min_temp: 0
#max_temp: 150

[temperature_sensor host]
sensor_type: temperature_host
min_temp: 0
max_temp: 150

#####################################################################
#	Displays
#####################################################################

#--------------------------------------------------------------------

#[display]
#	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: PC11
#a0_pin: PD2
#rst_pin: PC10
#encoder_pins: ^PC6,^PC7
#click_pin: ^!PA8
#contrast: 63
##spi_bus: spi1
#spi_software_mosi_pin: PA7
#spi_software_miso_pin: PA6
#spi_software_sclk_pin: PA5

#[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
#pin: PC12
#chain_count: 3
#chain_count: 60
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
#	Macros
#####################################################################

[gcode_macro MANUAL_QUAD_GANTRY_LEVEL]
gcode:
    #--------------------------------------------------------------------
    status_leveling
    #--------------------------------------------------------------------
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    status_ready
    #--------------------------------------------------------------------

    
#[gcode_macro PRINT_START]
[gcode_macro _START_END_PARAMS]
# this value is multiplied by the target temp to give wait time in seconds
variable_bed_warp_wait_multiplier: 8.0
# how far below target temp can the bed be to do fractional wait times
variable_bed_warp_fraction_wait: 0.75
# how long to wait each loop before displaying a status message
variable_bed_warp_wait_interval: 15
gcode:

[gcode_macro _CLIENT_VARIABLE]
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_custom_park_dz   : 3.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
gcode:

[virtual_pins]
[output_pin Bed_Warp_Stabilisation]
pin: virtual_pin:BED_WARP_STABILISE_pin
value: 0

[idle_timeout]
timeout: 1800
gcode:
    {% if printer.pause_resume.is_paused %}
        RESPOND TYPE=command MSG='Printer is paused, timeout bypassed'
    {% else %}
        RESPOND TYPE=command MSG='Timeout Reached - Turning off heaters and motors'
        TURN_OFF_HEATERS
        M84
    {% endif %}


#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  #{% set target_bed = params.BED|int %}
  {% set BED_TEMP=params.BED_TEMP|default(65)|float %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set bed_warp_stabilisation = printer['output_pin Bed_Warp_Stabilisation'].value == 1 %}
  {% set current_bed_temp = printer.heater_bed.temperature %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  # STATUS_HOMING                                         # Set LEDs to homing-mode
  # LIGHT_ON
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  M190 S{BED_TEMP}  # wait for bed temperature before next step

    {% if bed_warp_stabilisation %}
       {% if current_bed_temp < (BED_TEMP * 0.99) %}
            _WARP_STABILISE TARGET_TEMP={BED_TEMP} CURRENT_TEMP={current_bed_temp}
        {% else %}
            RESPOND TYPE=command MSG='Skipping bed warp stabilisation as bed already at {current_bed_temp}c'
        {% endif %}
    {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                    # Display info on display
  M109 S150                                             # Heat hotend to 150c
  clean_nozzle


  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  # STATUS_LEVELING                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
  G28 Z                                                # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  # STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  #BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh
  BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=5
  

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  # STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  # STATUS_PRINTING                                       # Set LEDs to printing-mode
  G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X100 E20 F1000                                     # Primeline
  G90                                                   # Absolute position
  SFS_ENABLE
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    {% set bed_warp_stabilisation = printer['output_pin Bed_Warp_Stabilisation'].value == 1 %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    SFS_DISABLE
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                 ; retract filament
    
    _CLIENT_RETRACT
    {% if bed_warp_stabilisation %}
        RESPOND TYPE=command MSG='Heatbed waiting for next print'
        M104 S0  # Turning off the nozzle
    {% else %}
        TURN_OFF_HEATERS
    {% endif %}

  
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_PAUSE_NEXT_LAYER ENABLE=0
    SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
    _TOOLHEAD_PARK_PAUSE_CANCEL

    # M84  # motors off

    M117 Printing complete.

    #BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro _WARP_STABILISE]
description: "Performs bed warp stabilisation based on the current bed temperature. Adjusts stabilisation time according to the bed temperature."
gcode:
    {% set multiplier = printer["gcode_macro _START_END_PARAMS"].bed_warp_wait_multiplier|float %}
    {% set interval = printer["gcode_macro _START_END_PARAMS"].bed_warp_wait_interval|int %}
    {% set partial = printer["gcode_macro _START_END_PARAMS"].bed_warp_fraction_wait|float %}

    {% set current_temp = params.CURRENT_TEMP|float %}
    {% set target_temp = params.TARGET_TEMP|float %}

    # if current temp is already pretty high, we only need to do a fraction of heat soaking
    {% if current_temp > (target_temp * partial) %}
        {% set total_time = ((target_temp - current_temp) * multiplier)|int %}
    {% else %}
        # 100c will be 13minutes approx heat time, 65c will be 8.5 minutes preheat, etc.
        {% set total_time = (target_temp * multiplier)|int %}
    {% endif %}

    SET_DISPLAY_TEXT MSG='Bed Warp Stabilisation starting with a total time of {total_time} seconds...'
    
    {% set loops = (total_time / interval)|int %}   
    {% for i in range(loops) %}
      {% set time_remaining = total_time - (i + 1) * interval %}
      SET_DISPLAY_TEXT MSG='Bed Warp Stabilization { time_remaining } seconds remaining'
      {% if time_remaining < interval %}
        G4 P{ time_remaining * 1000 }  # Wait for the interval time in milliseconds
      {% else %}
        G4 P{ interval * 1000 }  # Wait for the interval time in milliseconds
      {% endif %}
    {% endfor %}

    SET_DISPLAY_TEXT MSG=='Warp Stabilisation complete!'


## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.467
#*# pid_ki = 2.028
#*# pid_kd = 201.828
#*#
#*# [extruder]
#*#
#*# [probe]
#*# z_offset = -0.700
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 78.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 42.2
